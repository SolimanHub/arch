#!/usr/bin/bash
set -euo pipefail
cd /

# ===== Configuraciones iniciales =====
export LC_ALL=C
DEFAULT_DESKTOP=1
MINIMAL_INSTALL="n"
USER_HOME="/home/${SUDO_USER:-$USER}"

# ===== Detección automática de drivers gráficos =====
detect_gpu_drivers() {
    echo "Detectando controladores gráficos..."
    local gpu_info=$(lspci | grep -i vga)
    
    if grep -qi "intel" <<< "$gpu_info"; then
        pacman -S --noconfirm xf86-video-intel vulkan-intel intel-media-driver
    elif grep -qi "amd" <<< "$gpu_info"; then
        pacman -S --noconfirm xf86-video-amdgpu vulkan-radeon libva-mesa-driver
    elif grep -qi "nvidia" <<< "$gpu_info"; then
        pacman -S --noconfirm nvidia nvidia-utils nvidia-settings cuda
    else
        echo "Usando controladores genéricos (modesetting)"
    fi
}


# ===== Instalación mínima =====
read -rp "¿Desea instalación mínima? [S/n]: " MINIMAL_INSTALL
MINIMAL_INSTALL=${MINIMAL_INSTALL,,}

# ===== Paquetes base esenciales =====
pacman -S --needed --noconfirm \
    xorg-server xorg-xinit xorg-xrandr \
    sudo bash-completion nano curl wget git \
    man-db man-pages texinfo pciutils

# ===== Instalar controladores y kernel =====
detect_gpu_drivers
select_kernel

# ===== Selección de entornos gráficos (actualizado) =====
if [[ "$MINIMAL_INSTALL" != "s" ]]; then
    echo "===== Selección de entornos gráficos ====="
    echo "1) i3wm (Default)"
    echo "2) XFCE4"
    echo "3) GNOME"
    echo "4) KDE Plasma"
    echo "5) Hyprland (Wayland moderno)"
    echo "6) GNOME Minimal"
    echo "7) Sway (i3 en Wayland)"
    read -rp "Opciones (separar por comas): " desktop_choices

    IFS=',' read -ra choices <<< "${desktop_choices:-$DEFAULT_DESKTOP}"
    
    for choice in "${choices[@]}"; do
        case "$(tr -d '[:space:]' <<< "$choice")" in
            1) pacman -S --noconfirm i3-gaps rofi picom feh dunst polybar ;;
            2) pacman -S --noconfirm xfce4 xfce4-goodies ;;
            3) pacman -S --noconfirm gnome gnome-extra ;;
            4) pacman -S --noconfirm plasma kde-applications ;;
            5) pacman -S --noconfirm hyprland waybar grim slurp wofi ;;
            6) pacman -S --noconfirm gnome-shell gnome-control-center gdm ;;
            7) pacman -S --noconfirm sway swaylock swayidle wofi ;;
            *) echo "Opción $choice omitida" ;;
        esac
    done
fi

# ===== Paquetes opcionales (solo instalación completa) =====
if [[ "$MINIMAL_INSTALL" != "s" ]]; then
    # Paquetes esenciales mejorados
    pacman -S --noconfirm \
        lightdm lightdm-gtk-greeter \
        noto-fonts noto-fonts-emoji ttf-firacode-nerd \
        networkmanager network-manager-applet \
        pulseaudio pavucontrol pulseaudio-alsa \
        kitty thunar firefox neovim
    
    # Herramientas de desarrollo
    pacman -S --noconfirm \
        docker docker-compose nodejs npm go rust \
        python python-pip base-devel
    
    # Instalación de yay para AUR
    if ! command -v yay &> /dev/null; then
        git clone https://aur.archlinux.org/yay.git
        (cd yay && makepkg -si --noconfirm)
        rm -rf yay
    fi
    
    # Paquetes AUR recomendados
    yay -S --noconfirm \
        nerd-fonts-fira-code \
        papirus-icon-theme \
        tela-icon-theme \
        zsh-theme-powerlevel10k
fi

# ===== Configuración de dotfiles =====
read -rp "¿Desea instalar dotfiles personalizados? (URL del repo o Enter para omitir): " DOTFILES_URL
if [[ -n "$DOTFILES_URL" ]]; then
    git clone "$DOTFILES_URL" "${USER_HOME}/.dotfiles"
    rsync -a "${USER_HOME}/.dotfiles/" "${USER_HOME}/"
    chown -R "${SUDO_USER:-$USER}:${SUDO_USER:-$USER}" "${USER_HOME}"
fi

# ===== Configuraciones post-instalación =====
# Configuración básica de zsh
pacman -S --noconfirm zsh
chsh -s /bin/zsh "${SUDO_USER:-$USER}"

# Configurar servicios
systemctl enable NetworkManager
[[ "$MINIMAL_INSTALL" != "s" ]] && systemctl enable lightdm

# Configuración de kernel alternativo
if pacman -Qi linux-zen &>/dev/null; then
    cat > /etc/mkinitcpio.conf << EOF
PRESETS=('default' 'fallback')
COMPRESSION="zstd"
EOF
    mkinitcpio -P
fi

# Configuración de Hyprland (si está instalado)
if pacman -Qi hyprland &>/dev/null; then
    sudo -u "${SUDO_USER:-$USER}" mkdir -p "${USER_HOME}/.config/hypr"
    cat > "${USER_HOME}/.config/hypr/hyprland.conf" << EOF
exec-once = waybar & dbus-update-activation-environment --systemd & hyprpaper
monitor = ,preferred,auto,1
input { kb_layout = es }
EOF
fi

echo "¡Instalación completada con éxito!"
