#!/usr/bin/env bash
set -euo pipefail
trap 'echo -e "${RED}Error en línea $LINENO. Comando: $BASH_COMMAND${NC}"' ERR

# Configurar colores
RED='\033[31m'
GREEN='\033[32m'
YELLOW='\033[33m'
NC='\033[0m'

# Función para salir ante errores
error_exit() {
    echo -e "\033[31m[ERROR] $1\033[0m" >&2
    exit 1
}

MINIMAL_INSTALL="n"
read -rp "¿Desea instalación mínima? [s/N]: " MINIMAL_INSTALL
MINIMAL_INSTALL=${MINIMAL_INSTALL,,}

# --- Inicialización de variables ---
hostname=""
root_pass=""
root_pass_confirm=""
username=""
user_pass=""
user_pass_confirm=""
kernel_packages=""
desktop_choices=""

# --- Recolectar información ---

# 1. Nombre del host
while :; do
    read -p "Ingrese el nombre del host: " hostname
    [[ -z "$hostname" ]] && echo -e "${RED}El nombre del host no puede estar vacío!${NC}" || break
done

# 2. Password root
while :; do
    read -sp "Ingrese la contraseña para root (no se mostrará): " root_pass
    echo
    read -sp "Confirme la contraseña: " root_pass_confirm
    echo
    [[ "$root_pass" != "$root_pass_confirm" ]] && echo -e "${RED}Las contraseñas no coinciden!${NC}" || break
done

# 3. Nombre de usuario normal
while :; do
    read -p "Ingrese nombre de usuario sin privilegios: " username
    [[ -z "$username" ]] && echo -e "${RED}El nombre de usuario no puede estar vacío!${NC}" || break
done

# 4. Password del usuario
while :; do
    read -sp "Ingrese contraseña para $username (no se mostrará): " user_pass
    echo
    read -sp "Confirme la contraseña: " user_pass_confirm
    echo
    [[ "$user_pass" != "$user_pass_confirm" ]] && echo -e "${RED}Las contraseñas no coinciden!${NC}" || break
done

# --- Selección de kernel ---
echo -e "\033[32m===== Selección de Kernel =====\033[0m"
echo -e "1) Linux Standard (default)"
echo -e "2) Linux-Zen (mejor para escritorio)"
echo -e "3) Linux-LTS (larga vida útil)"
select_kernel() {
    read -rp "Seleccione kernel [1-3]: " kernel_choice
    case "$kernel_choice" in
        2) echo "linux-zen linux-zen-headers" ;;
        3) echo "linux-lts linux-lts-headers" ;;
        *) echo "linux linux-headers" ;; # Default
    esac
}
kernel_packages=$(select_kernel)

# --- Selección de entorno gráfico ---
if [[ "$MINIMAL_INSTALL" != "s" ]]; then
  echo -e "\033[32m===== Selección de entornos gráficos =====\033[0m"
  echo -e "1) i3wm (Default)"
  echo -e "2) XFCE4"
  echo -e "3) GNOME"
  echo -e "4) KDE Plasma"
  echo -e "5) Hyprland (Wayland moderno)"
  echo -e "6) GNOME Minimal"
  echo -e "7) Sway (i3 en Wayland)"
  echo -e "8) MATE (Clásico ligero)"
  select_desktop() {
      read -rp "Opciones (separar por comas) [1]: " desktop_choices
      desktop_choices=${desktop_choices:-1}  # Valor por defecto
      local cleaned_choices=()
      IFS=',' read -ra raw_choices <<< "$desktop_choices"
      for choice in "${raw_choices[@]}"; do
          local clean_choice=$(echo "$choice" | tr -d '[:space:]')
          case "$clean_choice" in
              1|2|3|4|5|6|7|8)
                  cleaned_choices+=("$clean_choice")
                  ;;
              *)
                  echo -e "${RED}Opción '$choice' inválida. Usando default (1).${NC}"
                  cleaned_choices=(1)
                  break
                  ;;
          esac
      done
      echo "${cleaned_choices[*]}" | tr ' ' ','
  }
  desktop_choices=$(select_desktop)
else
  desktop_choices="" # Si es mínima, no se selecciona ninguno
fi

# --- Resumen final ---
echo -e "${GREEN}
=================================="
echo -e "    Resumen de Configuración"
echo -e "==================================${NC}"
echo -e "${YELLOW}Hostname:${NC} $hostname"
echo -e "${YELLOW}Usuario root:${NC} Contraseña establecida"
echo -e "${YELLOW}Usuario normal:${NC} $username"
echo -e "${YELLOW}Contraseña usuario:${NC} Contraseña establecida"
echo -e "${YELLOW}Instalación mínima:${NC} $([[ "$MINIMAL_INSTALL" == "s" ]] && echo "Sí" || echo "No")"
echo -e "${YELLOW}Kernel seleccionado:${NC} $kernel_packages"
if [[ "$MINIMAL_INSTALL" != "s" ]]; then
    echo -e "${YELLOW}Entorno(s) gráfico(s):${NC} $desktop_choices"
else
    echo -e "${YELLOW}Entorno(s) gráfico(s):${NC} Ninguno (Instalación mínima)"
fi
echo -e "${GREEN}==================================${NC}"

# --- Agregar info a los otros scripts ---
root_pass_escaped=$(sed 's/[\/&]/\\&/g' <<< "$root_pass")
user_pass_escaped=$(sed 's/[\/&]/\\&/g' <<< "$user_pass")
sed -i "s/temporalxyz/$hostname/g" ./scripts/conf
sed -i "s/usuarioxyz/$username/g" ./scripts/usuarios
sed -i "s/usuarioxyz/$username/g" ./scripts/extras
sed -i "s/usuarioxyz/$username/g" ./scripts/zsh
sed -i "s/usuarioxyz/$username/g" ./scripts/yay_install
sed -i "s/tu_password_root/$root_pass_escaped/g" ./scripts/usuarios
sed -i "s/tu_password_usuario/$user_pass_escaped/g" ./scripts/usuarios
sed -i "s/selected_kernelsxyz/$kernel_packages/g" ./scripts/paquetes
sed -i "s/escritorioxyz/$desktop_choices/g" ./scripts/extras
sed -i "s/instalacion_minimaxyz/$MINIMAL_INSTALL/g" ./scripts/extras

echo -e "\033[32m==== Vamos a particionar y montar discos ====\033[0m"
./scripts/particionar_montar
